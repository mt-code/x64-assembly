     1                                  ; Instructions
     2                                  ;--
     3                                  ; imul <src>
     4                                  ;--
     5                                  ; byte: ax = al * <src>
     6                                  ; word: dx:ax = ax * <src>
     7                                  ; dword: edx:eax = eax * <src>
     8                                  ; qword: rdx:rax = rax * <src>
     9                                  ;--
    10                                  ; imul <dest>, <src/imm>
    11                                  ;--
    12                                  ; byte: n/a
    13                                  ; word: <reg16> = <reg16>, <op8/imm>
    14                                  ; dword: <reg32> = <reg32>, <op32/imm>
    15                                  ; qword: <reg64> = <reg64>, <op64/imm>
    16                                  ;--
    17                                  ; imul <dest>, <op>, <imm>
    18                                  ;--
    19                                  ; byte: n/a
    20                                  ; word: <reg16> = <reg16>, <op16>, <imm>
    21                                  ; dword: <reg32> = <reg32>, <op32>, <imm>
    22                                  ; qword: <reg64> = <reg64>, <op64>, <imm>
    23                                  
    24                                  section .data
    25                                      sys_exit equ 60
    26                                  
    27                                      ; word
    28 00000000 B004                        wNumA   dw 1200
    29 00000002 50FB                        wNumB   dw -1200
    30 00000004 0000                        wAns1   dw 0
    31 00000006 0000                        wAns2   dw 0
    32                                  
    33                                      ; dword
    34 00000008 10A40000                    dNumA   dd 42000
    35 0000000C 38CDFFFF                    dNumB   dd -13000
    36 00000010 00000000                    dAns1   dd 0
    37 00000014 00000000                    dAns2   dd 0
    38                                  
    39                                      ; qword
    40 00000018 C0D4010000000000            qNumA   dq 120000
    41 00000020 907DFCFFFFFFFFFF            qNumB   dq -230000
    42 00000028 0000000000000000            qAns1   dq 0
    43 00000030 0000000000000000            qAns2   dq 0
    44                                  
    45                                  section .text
    46                                      global _start
    47                                  
    48                                      _start:
    49                                          ;--
    50                                          ; wAns1 = wNumA * -13
    51 00000000 668B0425[00000000]              mov ax, word [wNumA]
    52 00000008 666BC0F3                        imul ax, -13
    53 0000000C 66890425[04000000]              mov word [wAns1], ax
    54                                  
    55                                          ;--
    56                                          ; wAns2 = wNumA * wNumB
    57 00000014 668B0425[00000000]              mov ax, word [wNumA]
    58 0000001C 660FAF0425-                     imul ax, word [wNumB]
    58 00000021 [02000000]         
    59 00000025 66890425[06000000]              mov word [wAns2], ax
    60                                  
    61                                          ;--
    62                                          ; dAns1 = dNumA * 113
    63 0000002D 8B0425[08000000]                mov eax, dword [dNumA]
    64 00000034 6BC071                          imul eax, 113
    65 00000037 890425[10000000]                mov dword [dAns1], eax
    66                                  
    67                                          ;--
    68                                          ; dAns2 = dNumA * dNumB
    69 0000003E 8B0425[08000000]                mov eax, dword [dNumA]
    70 00000045 0FAF0425[0C000000]              imul eax, dword [dNumB]
    71 0000004D 890425[14000000]                mov dword [dAns2], eax
    72                                  
    73                                          ;--
    74                                          ; qAns1 = qNumA * 7096
    75 00000054 488B0425[18000000]              mov rax, qword [qNumA]
    76 0000005C 4869C0B81B0000                  imul rax, 7096
    77 00000063 48890425[28000000]              mov qword [qAns1], rax
    78                                  
    79                                          ;--
    80                                          ; qAns1 = qNumA * 7096
    81                                          ; 3 operand instruction
    82 0000006B 488B0C25[18000000]              mov rcx, qword [qNumA]
    83 00000073 4869D9B81B0000                  imul rbx, rcx, 7096     ; result stored in rbx
    84 0000007A 48891C25[28000000]              mov qword [qAns1], rbx
    85                                  
    86                                          ;--
    87                                          ; qAns2 = qNumA * qNumB
    88 00000082 488B0425[18000000]              mov rax, qword [qNumA]
    89 0000008A 480FAF0425-                     imul rax, qword [qNumB]
    89 0000008F [20000000]         
    90 00000093 48890425[30000000]              mov qword [qAns2], rax
    91                                  
    92 0000009B B83C000000                      mov rax, sys_exit
    93 000000A0 BA00000000                      mov rdx, 0
    94 000000A5 0F05                            syscall
